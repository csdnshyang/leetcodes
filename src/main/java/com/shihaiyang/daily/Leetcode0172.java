package com.shihaiyang.daily;
// 0172. 阶乘后的零[质因数个数].
/*
给定一个整数 n ，返回 n! 结果中尾随零的数量。[质因数个数]

提示 n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1

 

示例 1：

输入：n = 3
输出：0
解释：3! = 6 ，不含尾随 0
示例 2：

输入：n = 5
输出：1
解释：5! = 120 ，有一个尾随 0
示例 3：

输入：n = 0
输出：0
 */
public class Leetcode0172 {
}

/*
阶乘里。有10的话，多1个0
阶乘里有2的倍数和5组合，多1个0
4的倍数和5组合多2个0

动态规划可以做吗？

只看5的个数和10 的个数

5 2 5
10 10 5
18 10 5 15
23 10 20 5 15
101 100 90 80

2一定比5的个数多。
有多少个5呢？
递归求每一个数中5的个数。
如果能整除5，那么就判断有多少个5.

递归判断...
n / 5 就是从1到n中5的个数。


 */
class Solution0172 {
    public int trailingZeroes(int n) {
        return n == 0 ? 0 : n / 5 + trailingZeroes(n / 5);
    }
}